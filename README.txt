-------------------------------------------------------------------------------------
            Функциональные возможности сервиса
-------------------------------------------------------------------------------------
- Добавление статьи.
- Добавление комментария к статье.
- Добавление коментария в ответ на другой комментарий (возможна любая вложенность).
- Получение всех комментариев к статье вплоть до 3 уровня вложенности.
- Получение всех вложенных комментариев для комментария 3 уровня.
- По ответу API комментариев можно воссоздать древовидную структуру.

-------------------------------------------------------------------------------------
				Загрузка репозитория
-------------------------------------------------------------------------------------
Создать директорию, в которую будет помещён проект
В выбранной директории открыть терминал и выполнить команду:  git clone https://github.com/g-ionov/comments_app.git

-------------------------------------------------------------------------------------
				Создание базы данных
-------------------------------------------------------------------------------------
В проекте используется PostgreSQL.
Поэтому необходимо выполнить его установку, если он отсутствует.


Далее необходимо создать базу данных. Это можно сделать при помощи pgAdmin или Shell(psql).
Если Вы используете sheel:

CREATE DATABASE blog_comments_db;
CREATE USER user_db WITH PASSWORD '12345';
ALTER ROLE user_db SET client_encoding TO 'utf8';
ALTER ROLE user_db SET default_transaction_isolation TO 'read committed';
ALTER ROLE user_db SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE blog_comments_db TO user_db;
\q


Настройки базы данных в проекте:
DATABASES={
   'default':{
      'ENGINE':'django.db.backends.postgresql_psycopg2',
      'NAME':'blog_comments_db',
      'USER':'user_db',
      'PASSWORD':'12345',
      'HOST':'localhost',
      'PORT':'5432',
   }
}

Если Вы используете другого пользователя для взаимодействия с базой данных, то Вам необходимо изменить USER и PASSWORD
Данные настройки необходимо поместить в файл comments_app/blog/blog/settings.py

Также необходимо поместить туда SECRET_KEY (его Вы можете задать самостоятельно):
SECRET_KEY = 'django-insecure--ALkandsl;fno2io@@R&!@#*ojfouwa4)_l4+*v-@mz*md5ceh('


-------------------------------------------------------------------------------------
				Настройки виртуального окружения и установка зависимостей
-------------------------------------------------------------------------------------
Выполните команду: python -m venv venv
Теперь необходимо активировать виртуальное окружение:
	В Windows: venv\Scripts\activate.bat
	В Linux: source venv/bin/activate

После чего выполним установку зависимостей:
pip install -r blog/requirements.txt

-------------------------------------------------------------------------------------
				Применение миграций, создание суперпользователя и запуск проекта
-------------------------------------------------------------------------------------
Переходим в директорию, в которой находится файл manage.py (команда: cd blog)
Выполняем команды:
python manage.py makemigrations
python manage.py migrate

Создаём суперпользователя:
python manage.py createsuperuser
Далее указываем имя пользователя и пароль

Теперь можно запускать проект. Для этого выполняем команду:
python manage.py runserver

Документацию к API ожно посмотреть по адресу: http://127.0.0.1:8000/swagger/
